//voltage 3.3=brown ,5.0=red,grownd = Black

#include <AccelStepper.h>

//stepper steps
#define STEPS 200
#define rpmChange 30

#define verbose 0 //0: No error or debugging messages via serial, 1: Error messages, 2: Error and debugging messages

#define NUMTEMPS 4  //length of lookup table
#define smooth 10  //exponential smoothing factor, higher is smoother
#define sensIn A0  //~BrownOutput of the hall sensor


//Nema 16 pins White
#define clk16 6
#define dir16 7
#define constTime  600

//thinessGage pins not in use
#define CLOCK_PIN 12 //Green
#define DATA_PIN  11 //~Blue

//Nema 17 pins Grey
#define clk17 3
#define dir17 2


//Nema 23 pins Purple
#define clk23 4
#define dir23 5


//Global Data varibles

//RPM
int nema16Rpm =1100;
int nema17Rpm = 1;
int nema23Rpm = 133;

unsigned long tmpTime17 , checkTime17,oldTime17;
unsigned long tmpTime , checkTime,oldTime;
float result = 0,upper =1.65, lower=1.3;

AccelStepper nema16(AccelStepper::DRIVER, clk16,dir16);
AccelStepper nema17(AccelStepper::DRIVER, clk17,dir17);
AccelStepper nema23(AccelStepper::DRIVER, clk23,dir23);

void setup()
{
  Serial.begin(115200);
  //Thikness sensor setup
 //  pinMode(CLOCK_PIN, INPUT);
//   pinMode(DATA_PIN, INPUT);
   oldTime = millis();
 
  // Configure each stepper
  nema16.setMaxSpeed(nema16Rpm);
  nema16.setAcceleration(300.0);
  nema16.moveTo(2000000000L);
 
  nema23.setMaxSpeed(nema23Rpm);
  nema23.setAcceleration(300.0);
  nema23.moveTo(2000000000L);
 
  nema17.setMaxSpeed(nema17Rpm);
  nema17.moveTo(2000000000L);
}

void loop()
{
  moveSteppers();
  readData();
}
void moveSteppers()
{
  nema23.run();
  nema16.run();
}
void readData()
{
  checkTime = millis();
  if((checkTime - oldTime) >= constTime)
  {
    readCaliper();
    //compaiorData();
    oldTime = checkTime;  
//    if (nema17.distanceToGo() == 0)
//       nema17.moveTo(-nema17.currentPosition());
    nema17.run();
  }
}

void readCaliper()
{
  int sensorValue = analogRead(sensIn);
  //y= -48x+504
  //(y-504)/-48 = x
  Serial.print("Raw: ");
  Serial.print(sensorValue);
  Serial.print(" , mm: ");
  result = (sensorValue-521.5)/-56.0;
  Serial.println(result);
  Serial.print(" , Rpm: ");
  Serial.println(nema16Rpm);
}
void compaiorData()
{
     //1.82 > 1.70
    if(result < lower)
    {
      nema16Rpm = nema16Rpm - rpmChange;
      nema16.setMaxSpeed(nema16Rpm);
    }
        //1.73 < 1.78
    if (result > upper )
    {
       nema16Rpm = nema16Rpm + rpmChange;
      nema16.setMaxSpeed(nema16Rpm);
    }
     
}
